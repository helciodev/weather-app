(()=>{"use strict";const e=document.querySelector(".temperature"),t=document.querySelector(".location"),n=document.getElementById("description"),o=document.getElementById("pressure"),a=document.getElementById("feel-like"),i=document.getElementById("humidity"),s=document.getElementById("celsius"),c=document.getElementById("fahrenheit"),r=document.getElementById("icon"),l=document.getElementById("alert"),d=document.getElementById("search-city"),m=document.getElementById("city-input"),u=s=>{r.innerHTML=`<img src='./icons/${s.weather[0].icon}.png'>`,e.textContent=`${Math.floor(s.main.temp)} °`,t.textContent=`${s.name}, ${s.sys.country}`,n.textContent=`${s.weather[0].description}`,o.textContent=s.main.pressure,a.textContent=`${Math.floor(s.main.feels_like)} °C`,i.textContent=s.main.humidity},p=e=>{l.innerHTML=`<p>${e.message}</p>`,l.classList.remove("hidden")};(()=>{let t="celsius";const n="http://cors-anywhere.herokuapp.com/",o="f7c2cc6f11db4a4873f18ec881fd1be0";window.addEventListener("load",(()=>{let i,r;navigator.geolocation?navigator.geolocation.getCurrentPosition((l=>{i=l.coords.latitude,r=l.coords.longitude;const d=`${n}api.openweathermap.org/data/2.5/weather?lat=${i}&lon=${r}&units=metric&appid=${o}`;(async()=>{try{const n=await fetch(d),o=await n.json();u(o),c.addEventListener("click",(()=>{"celsius"===t&&(e.textContent=`${Math.floor(1.8*o.main.temp+32)} °`,a.textContent=`${Math.floor(1.8*o.main.feels_like+32)} °F`,t="kelvin",s.classList.remove("font-extrabold"),c.classList.add("font-extrabold"))})),s.addEventListener("click",(()=>{"kelvin"===t&&(e.textContent=`${Math.floor(o.main.temp)} °`,t="celsius",c.classList.remove("font-extrabold"),s.classList.add("font-extrabold"),a.textContent=`${Math.floor(o.main.feels_like)} °C`)}))}catch(e){p(e)}})()})):(l.innerHTML="<p>User browser does not support geolocation</p>",l.classList.remove("hidden"))})),d.addEventListener("submit",(e=>{if(e.preventDefault(),""===m.value||null===m)return;const t=m.value;m.value=null;const a=`${n}api.openweathermap.org/data/2.5/weather?q=${t}&units=metric&appid=${o}`;(async()=>{try{const e=await fetch(a),t=await e.json();u(t)}catch(e){p(e)}})()}))})()})();